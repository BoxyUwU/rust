note: external requirements
  --> $DIR/propagate-approximated-ref.rs:43:47
   |
LL |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {
   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: supply::{closure#0} with closure substs [
               Int(
                   I16,
               ),
               FnPtr(
                   Binder(
                       ([Tuple([Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }), Adt(std::cell::Cell, [Ref('_#1r, Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrAnon(1, None) }), Uint(U32), Not), Not)]), Not), Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 2, kind: BrAnon(2, None) }), Adt(std::cell::Cell, [Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 3, kind: BrAnon(3, None) }), Ref('_#2r, Uint(U32), Not), Not)]), Not), Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 4, kind: BrAnon(4, None) }), Adt(std::cell::Cell, [Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrAnon(1, None) }), Uint(U32), Not)]), Not), Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 5, kind: BrAnon(5, None) }), Adt(std::cell::Cell, [Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 3, kind: BrAnon(3, None) }), Uint(U32), Not)]), Not)])]; c_variadic: false)->Tuple([]),
                       [
                           Region(
                               BrAnon(0, None),
                           ),
                           Region(
                               BrAnon(1, None),
                           ),
                           Region(
                               BrAnon(2, None),
                           ),
                           Region(
                               BrAnon(3, None),
                           ),
                           Region(
                               BrAnon(4, None),
                           ),
                           Region(
                               BrAnon(5, None),
                           ),
                       ],
                   ),
               ),
               Tuple(
                   [],
               ),
           ]
   = note: late-bound region is '_#3r
   = note: late-bound region is '_#4r
   = note: number of external vids: 5
   = note: where '_#1r: '_#2r

note: no external requirements
  --> $DIR/propagate-approximated-ref.rs:42:1
   |
LL | fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: supply

error: lifetime may not live long enough
  --> $DIR/propagate-approximated-ref.rs:45:9
   |
LL | fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {
   |           --  -- lifetime `'b` defined here
   |           |
   |           lifetime `'a` defined here
...
LL |         demand_y(x, y, x.get())
   |         ^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'a` must outlive `'b`
   |
   = help: consider adding the following bound: `'a: 'b`

error: aborting due to previous error

