note: no external requirements
  --> $DIR/return-wrong-bound-region.rs:11:16
   |
LL |     expect_sig(|a, b| b); // ought to return `a`
   |                ^^^^^^
   |
   = note: defining type: test::{closure#0} with closure substs [
               Int(
                   I16,
               ),
               FnPtr(
                   Binder(
                       ([Tuple([Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }), Int(I32), Not), Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrAnon(1, None) }), Int(I32), Not)])]; c_variadic: false)->Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }), Int(I32), Not),
                       [
                           Region(
                               BrAnon(0, None),
                           ),
                           Region(
                               BrAnon(1, None),
                           ),
                       ],
                   ),
               ),
               Tuple(
                   [],
               ),
           ]

error: lifetime may not live long enough
  --> $DIR/return-wrong-bound-region.rs:11:23
   |
LL |     expect_sig(|a, b| b); // ought to return `a`
   |                 -  -  ^ closure was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`
   |                 |  |
   |                 |  has type `&'1 i32`
   |                 has type `&'2 i32`

note: no external requirements
  --> $DIR/return-wrong-bound-region.rs:10:1
   |
LL | fn test() {
   | ^^^^^^^^^
   |
   = note: defining type: test

error: aborting due to previous error

