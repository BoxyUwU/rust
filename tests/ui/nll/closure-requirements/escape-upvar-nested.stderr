note: external requirements
  --> $DIR/escape-upvar-nested.rs:21:32
   |
LL |             let mut closure1 = || p = &y;
   |                                ^^
   |
   = note: defining type: test::{closure#0}::{closure#0} with closure substs [
               Int(
                   I16,
               ),
               FnPtr(
                   Binder(
                       ([Tuple([])]; c_variadic: false)->Tuple([]),
                       [],
                   ),
               ),
               Tuple(
                   [
                       Ref(
                           '_#1r,
                           Ref(
                               '_#2r,
                               Int(
                                   I32,
                               ),
                               Not,
                           ),
                           Mut,
                       ),
                       Ref(
                           '_#3r,
                           Int(
                               I32,
                           ),
                           Not,
                       ),
                   ],
               ),
           ]
   = note: number of external vids: 4
   = note: where '_#3r: '_#2r

note: external requirements
  --> $DIR/escape-upvar-nested.rs:20:27
   |
LL |         let mut closure = || {
   |                           ^^
   |
   = note: defining type: test::{closure#0} with closure substs [
               Int(
                   I16,
               ),
               FnPtr(
                   Binder(
                       ([Tuple([])]; c_variadic: false)->Tuple([]),
                       [],
                   ),
               ),
               Tuple(
                   [
                       Ref(
                           '_#1r,
                           Ref(
                               '_#2r,
                               Int(
                                   I32,
                               ),
                               Not,
                           ),
                           Mut,
                       ),
                       Ref(
                           '_#3r,
                           Int(
                               I32,
                           ),
                           Not,
                       ),
                   ],
               ),
           ]
   = note: number of external vids: 4
   = note: where '_#3r: '_#2r

note: no external requirements
  --> $DIR/escape-upvar-nested.rs:13:1
   |
LL | fn test() {
   | ^^^^^^^^^
   |
   = note: defining type: test

error[E0597]: `y` does not live long enough
  --> $DIR/escape-upvar-nested.rs:21:40
   |
LL |         let mut closure = || {
   |                           -- value captured here
LL |             let mut closure1 = || p = &y;
   |                                        ^ borrowed value does not live long enough
...
LL |     }
   |     - `y` dropped here while still borrowed
LL |
LL |     deref(p);
   |           - borrow later used here

error: aborting due to previous error

For more information about this error, try `rustc --explain E0597`.
