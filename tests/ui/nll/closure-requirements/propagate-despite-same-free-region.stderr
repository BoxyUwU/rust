note: external requirements
  --> $DIR/propagate-despite-same-free-region.rs:42:9
   |
LL |         |_outlives1, _outlives2, x, y| {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: supply::{closure#0} with closure substs [
               Int(
                   I16,
               ),
               FnPtr(
                   Binder(
                       ([Tuple([Adt(std::cell::Cell, [Ref('_#1r, Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }), Uint(U32), Not), Not)]), Adt(std::cell::Cell, [Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrAnon(1, None) }), Ref('_#2r, Uint(U32), Not), Not)]), Adt(std::cell::Cell, [Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }), Uint(U32), Not)]), Adt(std::cell::Cell, [Ref(ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrAnon(1, None) }), Uint(U32), Not)])])]; c_variadic: false)->Tuple([]),
                       [
                           Region(
                               BrAnon(0, None),
                           ),
                           Region(
                               BrAnon(1, None),
                           ),
                       ],
                   ),
               ),
               Tuple(
                   [],
               ),
           ]
   = note: late-bound region is '_#3r
   = note: number of external vids: 4
   = note: where '_#1r: '_#2r

note: no external requirements
  --> $DIR/propagate-despite-same-free-region.rs:39:1
   |
LL | fn supply<'a>(cell_a: Cell<&'a u32>) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: supply

