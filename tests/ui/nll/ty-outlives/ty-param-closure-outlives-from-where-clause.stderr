note: external requirements
  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:27:26
   |
LL |     with_signature(a, b, |x, y| {
   |                          ^^^^^^
   |
   = note: defining type: no_region::<T>::{closure#0} with closure substs [
               Int(
                   I32,
               ),
               FnPtr(
                   Binder(
                       ([Tuple([Adt(std::cell::Cell, [Ref('_#1r, Tuple([]), Not)]), Param(T/#0)])]; c_variadic: false)->Tuple([]),
                       [],
                   ),
               ),
               Tuple(
                   [],
               ),
           ]
   = note: late-bound region is '_#2r
   = note: number of external vids: 3
   = note: where Param(T/#0): '_#1r

note: no external requirements
  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:26:1
   |
LL | fn no_region<'a, T>(a: Cell<&'a ()>, b: T) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: no_region::<T>

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:32:9
   |
LL |         require(&x, &y)
   |         ^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds
   |
help: consider adding an explicit lifetime bound...
   |
LL | fn no_region<'a, T: 'a>(a: Cell<&'a ()>, b: T) {
   |                   ++++

note: external requirements
  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:42:26
   |
LL |     with_signature(a, b, |x, y| {
   |                          ^^^^^^
   |
   = note: defining type: correct_region::<'_#1r, T>::{closure#0} with closure substs [
               Int(
                   I32,
               ),
               FnPtr(
                   Binder(
                       ([Tuple([Adt(std::cell::Cell, [Ref('_#2r, Tuple([]), Not)]), Param(T/#1)])]; c_variadic: false)->Tuple([]),
                       [],
                   ),
               ),
               Tuple(
                   [],
               ),
           ]
   = note: number of external vids: 3
   = note: where Param(T/#1): '_#2r

note: no external requirements
  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:38:1
   |
LL | / fn correct_region<'a, T>(a: Cell<&'a ()>, b: T)
LL | | where
LL | |     T: 'a,
   | |__________^
   |
   = note: defining type: correct_region::<'_#1r, T>

note: external requirements
  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:63:26
   |
LL |     with_signature(a, b, |x, y| {
   |                          ^^^^^^
   |
   = note: defining type: wrong_region::<'_#1r, T>::{closure#0} with closure substs [
               Int(
                   I32,
               ),
               FnPtr(
                   Binder(
                       ([Tuple([Adt(std::cell::Cell, [Ref('_#2r, Tuple([]), Not)]), Param(T/#1)])]; c_variadic: false)->Tuple([]),
                       [],
                   ),
               ),
               Tuple(
                   [],
               ),
           ]
   = note: late-bound region is '_#3r
   = note: number of external vids: 4
   = note: where Param(T/#1): '_#2r

note: no external requirements
  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:59:1
   |
LL | / fn wrong_region<'a, 'b, T>(a: Cell<&'a ()>, b: T)
LL | | where
LL | |     T: 'b,
   | |__________^
   |
   = note: defining type: wrong_region::<'_#1r, T>

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:65:9
   |
LL |         require(&x, &y)
   |         ^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds
   |
help: consider adding an explicit lifetime bound...
   |
LL |     T: 'b + 'a,
   |           ++++

note: external requirements
  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:76:26
   |
LL |     with_signature(a, b, |x, y| {
   |                          ^^^^^^
   |
   = note: defining type: outlives_region::<'_#1r, '_#2r, T>::{closure#0} with closure substs [
               Int(
                   I32,
               ),
               FnPtr(
                   Binder(
                       ([Tuple([Adt(std::cell::Cell, [Ref('_#3r, Tuple([]), Not)]), Param(T/#2)])]; c_variadic: false)->Tuple([]),
                       [],
                   ),
               ),
               Tuple(
                   [],
               ),
           ]
   = note: number of external vids: 4
   = note: where Param(T/#2): '_#3r

note: no external requirements
  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:71:1
   |
LL | / fn outlives_region<'a, 'b, T>(a: Cell<&'a ()>, b: T)
LL | | where
LL | |     T: 'b,
LL | |     'b: 'a,
   | |___________^
   |
   = note: defining type: outlives_region::<'_#1r, '_#2r, T>

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0309`.
